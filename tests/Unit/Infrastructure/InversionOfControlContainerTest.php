<?php

namespace Tests\Unit\Infrastructure;


use App\Domain\Coordinate;
use App\Domain\MovableInterface;
use App\Domain\TankOperationsMovableInterface;
use App\Infrastructure\IoC;
use PHPUnit\Framework\TestCase;

class InversionOfControlContainerTest  extends TestCase
{
    public function testResolve()
    {
       $container = new IoC();
       $container->resolve('IoC.Register', 'A', function (array $args){
            return $args[0];
       });
       $result = $container->resolve('A', 'test');
       $this->assertSame('test', $result);
    }

    public function testAutoGenerating()
    {
        $container = new IoC();
        $container->generate(TankOperationsMovableInterface::class);

        $stub = $this->createMock(TankOperationsMovableInterface::class);
        $stub->method('getVelocity')
            ->willReturn(new Coordinate(-7, 3));
        $stub->method('getPosition')
            ->willReturn(new Coordinate(3, 2));
        $container->resolve('IoC.Register', 'TankOperationsMovableInterface.getPosition', function (array $args){
            return new Coordinate(3, 2);
        });
        $test = new \AutoGeneratedTankOperationsMovableInterfaceAdapter($stub);
        $this->assertEquals(new Coordinate(3, 2), $test->getPosition());
    }
}